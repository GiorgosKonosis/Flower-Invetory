// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using FlowerInventory.Data;

#nullable disable

namespace FlowerInventory.Migrations
{
    [DbContext(typeof(FlowerShopContext))]
    [Migration("20250614072934_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Beautiful and fragrant flowers",
                            Name = "Roses"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Elegant spring flowers",
                            Name = "Tulips"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Flower", b =>
                {
                    b.Property<int>("FlowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlowerId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlowerId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Flowers");

                    b.HasData(
                        new
                        {
                            FlowerId = 1,
                            CategoryId = 1,
                            Name = "Red Rose",
                            Price = 2.50m,
                            Type = "Perennial"
                        },
                        new
                        {
                            FlowerId = 2,
                            CategoryId = 1,
                            Name = "White Rose",
                            Price = 3.00m,
                            Type = "Perennial"
                        },
                        new
                        {
                            FlowerId = 3,
                            CategoryId = 2,
                            Name = "Yellow Tulip",
                            Price = 1.75m,
                            Type = "Annual"
                        },
                        new
                        {
                            FlowerId = 4,
                            CategoryId = 2,
                            Name = "Purple Tulip",
                            Price = 2.00m,
                            Type = "Annual"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Flower", b =>
                {
                    b.HasOne("WebApplication1.Models.Category", "Category")
                        .WithMany("Flowers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Navigation("Flowers");
                });
#pragma warning restore 612, 618
        }
    }
}
